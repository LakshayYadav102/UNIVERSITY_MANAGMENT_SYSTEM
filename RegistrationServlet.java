import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.Map;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

@WebServlet("/RegistrationServlet")
public class RegistrationServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;

    // Define and initialize the courseMap
    private static final Map<String, String> courseMap = new HashMap<>();
    static {
        courseMap.put("1", "B-TECH");
        courseMap.put("2", "BBA");
        courseMap.put("3", "BCA");
        courseMap.put("4", "MBA");
        courseMap.put("5", "BSC");
    }

    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        String name = request.getParameter("name");
        String address = request.getParameter("address");
        String contact = request.getParameter("contact");
        String[] selectedCourseIds = request.getParameterValues("courses");

        // Database interaction
        try (Connection connection = DatabaseConnection.getConnection()) {
            // Insert user registration data
            String insertUserSql = "INSERT INTO users (name, address, contact) VALUES (?, ?, ?)";
            int userId;
            try (PreparedStatement userStatement = connection.prepareStatement(insertUserSql,
                    Statement.RETURN_GENERATED_KEYS)) {
                userStatement.setString(1, name);
                userStatement.setString(2, address);
                userStatement.setString(3, contact);
                userStatement.executeUpdate();

                // Get the user ID generated by the database
                try (ResultSet generatedKeys = userStatement.getGeneratedKeys()) {
                    if (generatedKeys.next()) {
                        userId = generatedKeys.getInt(1);
                    } else {
                        throw new SQLException("Creating user failed, no ID obtained.");
                    }
                }
            }

            // Insert selected courses
            if (selectedCourseIds != null) {
                String insertCoursesSql = "INSERT INTO user_courses (user_id, course_id) VALUES (?, ?)";
                try (PreparedStatement courseStatement = connection.prepareStatement(insertCoursesSql)) {
                    for (String courseId : selectedCourseIds) {
                        courseStatement.setInt(1, userId);
                        courseStatement.setInt(2, Integer.parseInt(courseId));
                        courseStatement.executeUpdate();
                    }
                }
            }

            // Display registration confirmation
            response.setContentType("text/html");
            PrintWriter out = response.getWriter();

            out.println("<html>");
            out.println("<head><title>Registration Confirmation</title></head>");
            out.println("<body>");
            out.println("<h2>Registration Confirmation</h2>");
            out.println("<p>Name: " + name + "</p>");
            out.println("<p>Address: " + address + "</p>");
            out.println("<p>Contact: " + contact + "</p>");
            out.println("<p>Selected Courses:</p>");
            out.println("<ul>");

            if (selectedCourseIds != null) {
                for (String courseId : selectedCourseIds) {
                    String courseName = courseMap.get(courseId);
                    out.println("<li>Selected Course: " + courseName + "</li>");
                }
            } else {
                out.println("<li>No courses selected</li>");
            }

            out.println("</ul>");
            out.println("</body>");
            out.println("</html>");

        } catch (SQLException e) {
            e.printStackTrace(); // Handle the exception appropriately
        }
    }
}
